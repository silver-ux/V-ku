---
import Header from "@components/section/top/Header.astro";
import Anken from "@components/section/Sec1Anken/Anken.astro";
import Footer from "@components/section/Footer/Footer.astro";
import Movie from "@components/section/Sec2Movie/Movie.astro";
import Support from "@components/section/Sec3Support/Support.astro";
import Top from "@components/section/top/Top.astro";
import Layout from "@layouts/Layout.astro";
import Join from "@components/section/Sec4Join/Join.astro";

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
	<Header />
	<Top />
	<Anken />
	<Movie />
	<Support />
	<Join />
	<Footer />
	<a class="pagetop" href="#"><div class="pagetop__arrow"></div></a>
</Layout>

<style>
	.pagetop {
		height: 50px;
		width: 50px;
		position: fixed;
		right: 30px;
		bottom: 30px;
		background: #fff;
		border: solid 2px #000;
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 2;
	}

	.pagetop__arrow {
		height: 10px;
		width: 10px;
		border-top: 3px solid #000;
		border-right: 3px solid #000;
		transform: translateY(20%) rotate(-45deg);
	}

	@media screen and (max-width: 650px) {
		.pagetop {
			display: none !important;
		}
	}
</style>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const navigationLinks = document.querySelectorAll('a[href^="#"]');

		for (let i = 0; i < navigationLinks.length; i++) {
			navigationLinks[i].addEventListener("click", function (e) {
				e.preventDefault();

				// hrefが存在するか確認
				const hasHref = navigationLinks[i].hasAttribute("href");

				if (hasHref) {
					// hrefが存在する時の処理
					const hrefAttribute =
						navigationLinks[i].getAttribute("href")!; // hasHrefでhrefがある時だけ処理されるので絶対にあることを示すために!を付けている

					// hrefがハッシュ(#)または空文字かどうか
					const isEmptyOrHashHref =
						"#" === hrefAttribute || "" === hrefAttribute;

					let targetElement: HTMLElement | null;

					if (isEmptyOrHashHref) {
						// hrefがハッシュ(#)または空文字の時の処理
						targetElement = document.documentElement;
					} else {
						// hrefが#hogeのようにハッシュに続いている時の処理
						targetElement = document.querySelector(hrefAttribute);
					}

					let topOfTarget;
					if (targetElement) {
						topOfTarget = targetElement.offsetTop;
					} else {
						// 該当の要素がない場合は一番上に移動するように設定
						topOfTarget = 0;
					}

					window.scrollTo({
						top: topOfTarget,
						behavior: "smooth",
					});
				}
			});
		}
	});
</script>
